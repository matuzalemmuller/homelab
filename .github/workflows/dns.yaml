name: Apply DNS changes
on:
  push:
    paths:
      - dns/**
      - .github/workflows/dns.yaml
    branches:
      - main

env:
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  terraform_plan:
    runs-on: ubuntu-22.04
    environment: dns-tf-plan
    container:
      image: hashicorp/terraform:1.12.2
    defaults:
      run:
        working-directory: dns
    outputs:
      should_skip_apply: ${{ steps.set_skip.outputs.should_skip_apply }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform init
        run: terraform init -input=false
      - name: Terraform plan
        id: set_skip
        run: |
          terraform plan -out=dns.plan -input=false -var "cloudflare_api_token=$CLOUDFLARE_API_TOKEN" -detailed-exitcode
          if [[ $? -eq 2 ]]; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi
      - name: Archive terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: dns.plan
          path: dns/dns.plan
  
  terraform_apply:
    needs: terraform_plan
    if: ${{ needs.terraform_plan.outputs.should_skip == 'false' }}
    runs-on: ubuntu-22.04
    container:
      image: hashicorp/terraform:1.12.2
    environment: dns-tf-apply
    defaults:
      run:
        working-directory: dns
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform init
        run: terraform init -input=false
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dns.plan
      - name: Terraform apply
        run: terraform apply dns.plan
